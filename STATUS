Apache 2.0 STATUS:
Last modified at [$Date: 2000/06/28 11:41:14 $]

Release:

    2.0a5   : ???
    2.0a4   : released June 7, 2000
    2.0a3   : released April 28, 2000
    2.0a2   : released March 31, 2000
    2.0a1   : released March 10, 2000

RELEASE SHOWSTOPPERS:
    * Win32: Get mod_auth_digest working under win32
      - APR_HAS_RANDOM should be defined on windows and there is a 
      lib/apr/misc/win32/rand.c which is basically a copy of what
      mod_auth_digest used to use.

    * Re-work configuration for top level Apache.  Work should start with
      trying to clean the autoconf stuff.  If and only if this proves
      impossible to do (very unlikely), autoconf should be removed and we
      will roll our own config implementation.

    * suEXEC doesn't work
        Status: Manoj has posted an patch to fix this.
        <19991103003605.A20612@samosa.mindspring.com>

    * Win32: Enable the Windows MPM to honor max_requests_per_child
        Status: Bill will fix this.

    * Win32: Get Apache working on Windows 95/98. The following work
	(at least) needs to be done:
	- winnt MPM: Fix 95/98 code paths in the winnt MPM. There is some NT
	specific code that is still not in NT only code paths
	- IOL binds to APR sendfile, implemented with TransmitFile, which 
        is not available on 95/98.

    * Win32: Test access logging with multiple threads. Will the 
	native file I/O calls serialize automagically like the 
	CRT calls or do we need to add region locking each time 
	we access the logs?
	Status: 

    * Win32: Complete the revamp the service environment and relocation
        into the WinNT MPM.  Changes ServerRoot service registry 
        parameter into ConfigArgs for multiple service startup parameters.
        Problems to fix in the revamp: -k shutdown/restart are broken, 
        signals are not being acknowledged.  Close window and shutdown 
        also seem out of sorts.
        OtherBill is working on this

    * Win32: fix build/run time environment to remove ApacheCore.dll 
        linkage from ab.exe and htdigest.exe.
    
    * We need a thread-safe resolver, at least on Unix.
        Status: The best known candidate would be something from
	BIND v9.
        Status: Greg asks, "why? doesn't gethostbyname_r() handle this?"

    * Modify mod_cgi and mod_cgid to deal with directories.  This allows
      a lot of directives to be removed from the core.

RELEASE NON-SHOWSTOPPERS BUT WOULD BE REAL NICE TO WRAP THESE UP:
    * OS/2: Get loadable modules working again. Requires shared core support
      which doesn't appear to be catered for in the current build system.

    * OS/2: Make mod_status work for spmt_os2 MPM.

    * Build scripts do not recognise AIX 4.2.1 pthreads, so the
      pthread MPMs will not build.

    * Win32: Reuse accept socket after transmitfile/close
	This is not a bug, but would be nice to get this feature in 
	before ship.

    * Win32: Enable the winnt MPM to use the new scoreboard API

    * Win32: Implement ap_shm_ functions in APR.

    * Win32: Win9x console window still won't play nice with the
        close window, logoff and shutdown scenarios.

    * Win32: Add a simple hold console open patch (wait for close or
        the ESC key, with a nice message) if the server died a bad 
        death (non-zero exit code) in console mode.

    * Platforms that do not support fork (primarily Win32 and AS/400)
      Consider introducing HAVE_FORK feature macro. Architect start-up code
      that avoids initializing all the modules in the parent process on
      platforms that do not support fork.

    * Clean the code.  There are a lot of places we used APR but didn't 
      remove the hacks that were required for the cross-platform code in
      1.3.  We need to make the code look like APR was supposed to be there. 

    * Go throught the 1.3 Bug DB and research the bugs marked "suspended".
      People were told these would be considered for inclusion in Apache 2.0,
      it would be nice to actually do so.

    * Win32: Migrate the MPM over to use APR thread/process calls. This
      would eliminate some code in the Win32 branch that essentially
      duplicates what is in APR.

      Bill says we need a new procattr, APR_CREATE_SUSPENDED (or
      something similar) to direct ap_create_process to create the
      process suspended. We also need a call to wake up the suspended 
      process This may not be able to be implemented everywhere though.

        Status: 

    * Move I/O layering into APR.

    * There are still a number of places in the code where we are
      loosing error status (i.e. throwing away the error returned by a
      system call and replacing it with a generic error code)

    * Win32: Implement reliable piped logs on Windows
        Status: 
          
    * Use APR to get rid of more platform dependancies.
        Status: Ryan Bloom <rbb@covalenet.net> is working on this.

    * The connection status table is not very efficient. Also, very few stats
      are exported to the connection status table (easy to fix), and mod_status
      is ugly.

    * Mass vhosting version of suEXEC.

    * Replace tables with a proper opaque ADT that has pluggable
      implementations (including something like the existing data type,
      plus hash tables for speed, with options for more later).
	Status: fanf is working on this.

    * configuration option to use *DBM
      Status: Greg +1 (volunteers)

    * add SDBM into src/lib/sdbm/ as a default/fallback DBM implementation.
      SDBM is used by Perl, mod_dav, mod_sssl, others for basic DBM support.
      Status: Greg +1 (volunteers)

    * Integrate mod_dav.
        Message-id: <20000625173247.M29590@lyra.org>
        Status: in process.
        - APR does not provide a couple needed things: chmod()
          and ap_finfo_t.st_dev.
	- expat-lite needs to be brought up to parity with the 1.3
	  vsn and inserted into the config/build process
	- SDBM needs to go into the config/build process
	- fix up include dirs to pick up expat-lite, sdbm, dav/main
	- APR-ization to the dav/fs/ stuff
	- case_preserved_filename stuff

    * ap_core_translate() and its use by mod_mmap_static are a bit wonky.
      The function should probably be exposed as a utility function (such
      as ap_translate_url2fs() or ap_validate_fs_url() or something).
      Another approach would be a new hook phase after "translate" which
      would allow mod_mmap_static to munge what the translation has
      decided to do.
        Status: Greg +1 (volunteers), Ryan +1

    * Go through ap_config.h and namespace-protect the symbols (e.g. USE_*).
      Some symbols can/should move to mpm_common.h where possible.

    * Explore use of a post-config hook for the code in http_main.c which
      calls ap_fixup_virutal_hosts(), ap_fini_vhost_config(), and
      ap_sort_hooks()  [to reduce the logic in main()]

    * read the config tree just once, and process N times (as necessary)

    * add a version number to ap_initialize() as an extra failsafe against
      (APR) library version skew.
      MsgID: <Pine.LNX.4.10.10005231712380.31927-100000@nebula.lyra.org>
      Status: Greg +1 (volunteers), Jeff +1, Ryan +1, Tony -0(?)

    * mod_info to use the configuration tree

    * add output filtering. there are a couple variants for this.
      - The "link-based" variant is ready to go:
        MsgID: <20000627044436.N29590@lyra.org>   (patch)
	MsgID: <20000627053302.O29590@lyra.org>   (demo usage)
	MsgID: <Pine.LNX.4.21.0006270731240.4006-100000@koj.rkbloom.net>
                             (problems with the patch)
        Status: Greg +1, Ryan -1
        

Other bugs that need fixing:

    * MaxRequestsPerChild measures connections, not requests.
        Until someone has a better way, we'll probably just rename it
        "MaxConnectionsPerChild".
    
    * Regex containers don't work in an intutive way
        Status: No one has come up with an efficient way to fix this
        behavior. Dean has suggested getting rid of regex containers
        completely.

    * SIGSEGV on Linux (glibc 2.1.2) isn't caught properly by a
      sigwaiting thread. We need to work around this, perhaps unless
      there is hope soon for a fixed glibc.

    * The mod_cgid daemon process isn't always cleaned up when httpd
      gets SIGTERM.  Jeff thinks it may be as simple as registering
      the daemon process for cleanup with the proper pool, but he hasn't
      looked at it in enough detail.

    * The MM library is built as static and shared library. This should
      be set up to build only the required version.

Other features that need writing:

    * Finish infrastructure in core for async MPMs
        Status: post 2.0

    * TODO in source -- just do an egrep on "TODO" and see what's there

Documentation that needs writing:
    * Mod_status docs are needed.

    * The concept of MPMs, especially if we ship more than one MPM for a
      given platform

    * New directives in the various MPMs and appropriate links from
	obsolete directives in core.html to the MPM documentation.

    * Revise manual/stopping.html and the last part of
	manual/misc/perf-tuning.html to take account of the MPMs.

    * API documentation
        Status: Ben Laurie has written some hooks documentation
        (apache-2.0/htdocs/hooks.html)

    * Changes since 1.3.9 can be more easily seen in the commitlog file
         dev.apache.org:/home/cvs/CVSROOT/commitlogs/apache-2.0
      which includes some of Roy's comments when the changes were
      committed in rough change-sets by purpose.  Note that the commitlog
      does not show the contents of new files until later.

    * mod_dav documentation (once integrated)

Available Patches:

   * Mike Abbott's <mja@trudge.engr.sgi.com> patches to improve
     performance
       Status: These were written for 1.3, and are awaiting a port to
       2.0
 
   * Jim Winstead's <jimw@trainedmonkey.com> patch to add CookieDomain and 
     other small mod_usertrack features

Open issues:

   * What do we do about mod_proxy?

   * Which MPMs will be included with Apache 2.0?

   * Is conf/highperformance.conf-dist obsolete?  It looks obsolete.

