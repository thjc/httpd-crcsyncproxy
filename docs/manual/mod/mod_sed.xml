<?xml version="1.0"?>
<!DOCTYPE modulesynopsis SYSTEM "../style/modulesynopsis.dtd">
<?xml-stylesheet type="text/xsl" href="../style/manual.en.xsl"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<modulesynopsis metafile="mod_sed.xml.meta">

<name>mod_sed</name>
<description>Filtering Input (request) and Output (response) content using sed commands</description>
<status>Experimental</status>
<sourcefile>mod_sed.c sed0.c sed1.c regexp.c regexp.h sed.h</sourcefile>
<identifier>sed_module</identifier>
<compatibility>Available in Apache 2.3 and later</compatibility>

<summary>
<p>
mod_sed is a in-process content filter. mod_sed filter implement the sed edit
commands implemented by Solaris 10 sed
program as described in <a href="http://docs.sun.com/app/docs/doc/816-5165/sed-1b?a=view">man
page</a>. However unlike sed, mod_sed doesn't take data from
standard
input. Instead filter act on the entity data sent between client and
server. mod_sed can be used as a input or output filter. mod_sed is a
content filter which means that it can not be used to modify client or
server http headers.
</p>
<p>
mod_sed output filter accept a chunk of data and execute the sed scripts on data and generates the output which is passed to next filter in the filter chain.
</p>

<p>
mod_sed input filter reads the data from next filter in filter chain and executes the sed scripts and returns the generated data to caller filter in the filter chain.
</p>

<p>
Both input and output filter only process the data if new line character is seen in the content. At the end of the data, rest of the data is treated as last line.
</p>

<p>A tutorial article on mod_sed, and why it is more powerful than simple
string or regular expression search and replace, is available in <a
href="http://blogs.sun.com/basant/entry/using_mod_sed_to_filter">on
the author's blog</a>.</p>

</summary>

<directivesynopsis>
<name>OutputSed</name>
<description>Sed command for filter the response content</description>
<syntax>OutputSed <var>sed-command</var></syntax>
<contextlist><context>directory</context><context>.htaccess</context>
</contextlist>

<usage>
    <p>The <directive>OutputSed</directive> directive specify the sed
    command which will be executed on the response.
    </p>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>InputSed</name>
<description>Sed command to filter the request data (typically post data)</description>
<syntax>InputSed <var>sed-command</var></syntax>
<contextlist><context>directory</context><context>.htaccess</context>
</contextlist>

<usage>
    <p>The <directive>InputSed</directive> directive specify the sed command
    which will be executed on the request data e.g POST data.
    </p>
</usage>
</directivesynopsis>

<section id="sampleconf"><title>Sample Configuration</title>
    <example><title>Adding a output filter </title>
         # In following example, sed filter will replace the string <br />
         # "monday" to "MON" and the string "sunday" to SUN in html document <br />
         # before sending to client. <br />
        <indent>
        &lt;Directory "/var/www/docs/sed"&gt; <br />
           <indent>
           AddOutputFilter Sed html <br />
           OutputSed "s/monday/MON/g" <br />
           OutputSed "s/sunday/SUN/g" <br />
           </indent>
        &lt;/Directory&gt; <br />
        </indent>
    </example>

    <example><title>Adding a input filter </title>
         # In following example, sed filter will replace the string <br />
         # "monday" to "MON" and the string "sunday" to SUN in the POST data <br />
         # sent to php <br />
        <indent>
        &lt;Directory "/var/www/docs/sed"&gt; <br />
           <indent>
           AddInputFilter Sed php <br />
           OutputSed "s/monday/MON/g" <br />
           OutputSed "s/sunday/SUN/g" <br />
           </indent>
        &lt;/Directory&gt; <br />
        </indent>
    </example>
</section>
<section id="sed_commands"><title>Sed Commands</title>
    <p>
    Complete details of the sed command can be found from
   <a href="http://docs.sun.com/app/docs/doc/816-5165/sed-1b?a=view">sed man
page</a>.
    </p>
    <dl>
        <dt><code>b</code></dt>
        <dd>branch to the label specified (Similar to goto)</dd>
        <dt><code>h</code></dt>
        <dd>Copy the current line to hold buffer.</dd>
        <dt><code>H</code></dt>
        <dd>Append the current line to hold buffer.</dd>
        <dt><code>g</code></dt>
        <dd>Copy the hold buffer into the current line</dd>
        <dt><code>G</code></dt>
        <dd>Append the hold buffer into the current line</dd>
        <dt><code>x</code></dt>
        <dd>Swap the content of hold buffer and current line</dd>
    </dl>
</section>
</modulesynopsis>
