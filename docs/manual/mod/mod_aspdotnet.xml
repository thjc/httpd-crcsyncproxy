<?xml version="1.0"?>
<!DOCTYPE modulesynopsis SYSTEM "http://httpd.apache.org/docs-2.0/style/modulesynopsis.dtd">
<?xml-stylesheet type="text/xsl" href="http://httpd.apache.org/docs-2.0/style/manual.en.xsl"?>
<!-- $LastChangedRevision$ -->

<!--
 Copyright 2002-2004 The Apache Software Foundation

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<modulesynopsis metafile="mod_aspdotnet.xml.meta">

<name>mod_aspdotnet</name> 
<description>Provides an interface for ASP.NET content between Apache HTTP
Server 2.0 and Microsoft's ASP.NET host.</description>
<status href="http://httpd.apache.org/mod_aspdotnet/">External</status>
<sourcefile>mod_aspdotnet.cpp</sourcefile>
<identifier>aspdotnet_module</identifier>
<compatibility>Compatible only with httpd 2.0.44 and later.</compatibility>

<summary>
    <p>The <directive module="mod_aspdotnet">AspNet</directive> and
    <directive module="mod_aspdotnet">AspNetMount</directive> directives
    and asp.net handler provided by <module>mod_aspdotnet</module> are used
    to configure content to be served of the ASP.NET engine.</p>

    <p>The current version is compatible with the .NET Framework versions 1.x
    (1.0, 1.1, etc).  The current version is not compatible with .NET Framework 
    version 2.0 although this may be addressed in the future.</p>

    <p>Only modern Windows NT-based operating systems (2000, XP, 2003, etc) are 
    supported.  Older versions such as Windows 98 and ME are not, Windows NT 6 
    requires Service Pack 6, and the module authors will not invest time or
    effort on these older versions.  Do not contact the project regarding 
    support of older operating systems.</p>
</summary>

<seealso><a href="../handler.html">Configuring Handlers</a></seealso>

<section id="usage"><title>Usage</title>
    <p>Several global configurations must be given to enable the Apache
    HTTP Server to correctly serve ASP.NET application content.</p>

    <example><title>Example:</title>
LoadModule aspdotnet_module modules/mod_aspdotnet.so <br />
<br />
AddHandler asp.net asax ascx ashx asmx aspx axd config cs csproj \<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                   licx rem resources resx soap vb vbproj vsdisco webinfo<br />
<br />
AliasMatch "^/(?i)aspnet_client/system_web/(\d+)_(\d+)_(\d+)_(\d+)/(.*)" \<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
           "C:/Windows/Microsoft.NET/Framework/v$1.$2.$3/ASP.NETClientFiles/$4"<br />
<br />
&lt;Directory "C:/Windows/Microsoft.NET/Framework/v*/ASP.NETClientFiles"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;Options FollowSymlinks<br />
&nbsp;&nbsp;&nbsp;&nbsp;Order allow,deny<br />
&nbsp;&nbsp;&nbsp;&nbsp;Allow from all<br />
&lt;/Directory&gt;<br />
    </example>

    <p>This will direct all requests for ASP.NET-releated files to the 
    mod_aspdotnet handler, and serve Microsoft's ASP.NET client files 
    and support scripts as expected by ASP.NET applications.</p>

    <p>Provide individual <directive module="mod_aspdotnet"
     >AspNet</directive> and <directive module="mod_aspdotnet"
     >AspNetMount</directive> directives for each application (containing 
    a unique web.config file at it's application root.)</p>

    <example><title>Example:</title>
AspNetMount /app-uri "C:/path/to/app"<br />
Alias /app-uri "C:/path/to/app"<br />
&lt;Directory "C:/path/to/app"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;Options FollowSymlinks Indexes<br />
&nbsp;&nbsp;&nbsp;&nbsp;AspNet files<br />
&nbsp;&nbsp;&nbsp;&nbsp;Order allow,deny<br />
&nbsp;&nbsp;&nbsp;&nbsp;Allow from all<br />
&nbsp;&nbsp;&nbsp;&nbsp;DirectoryIndex default.htm default.aspx<br />
&lt;/Directory&gt;<br />
    </example>

</section>

<directivesynopsis>
<name>AspNet</name>

<description>Enables mod_aspdotnet to process ASP.NET content</description>
<syntax>AspNet [[<var>Files</var>] [<var>Directories</var>] 
                [<var>Virtual</var>] [<var>Errors</var>]]
              | [<var>All</var>] | [<var>None</var>]</syntax>
<default>AspNet None</default>
<contextlist><context>server config</context><context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Options</override>
<compatibility>Build 2004 and later</compatibility>

<usage>

    <p>The <directive>AspNet</directive> directive determines what content
    may be served by the ASP.NET host.  This directive does -not- actually 
    expose the content or mount the URI to physical files, you must use the 
    <directive module="mod_alias">Alias</directive> and
    <directive>AspNetMount</directive> directives to expose the content
    to the remote user.</p>

    <p>The <directive>AspNet</directive> <var>files</var> directive is
    the equivilant for ASP.NET files to the behavior of Options ExecCGI 
    for CGI content.  In the original version of mod_aspdotnet, in fact,
    Options ExecCGI was used to determine if ASP.NET content would be
    invoked through mod_aspdotnet.  In version 2.0.2 and later, this is
    no longer true, and your configuration files must be updated from
    Options ExecCGI to AspNet files.</p>

    <p>The None option disables all ASP.NET processing, while the individual
    options below enable ASP.NET processing for specific request types:</p>

    <dl>
      <dt><code>All</code></dt>

      <dd>All options below. This is generally not a recommended setting.</dd>

      <dt><code>Files</code></dt>

      <dd>Files that exist in the filesystem, which are directed to the
      asp.net handler.</dd>

      <dt><code>Directories</code></dt>

      <dd>Directories that exist in the filesystem, which are directed to the
      asp.net handler.  This can be used to invoke an HttpHandler to produce
      custom directory listings.</dd>

      <dt><code>Virtual</code></dt>

      <dd>Requests that map to neither a file nor directory in the filesystem,
      which are directed to the asp.net handler.  This is used to invoke any
      HttpHandler which accesses non-file based resources, such as ASP.NET
      remoting requests.</dd>

      <dt><code>Error</code></dt>

      <dd>Error result pages generated by ASP.NET.  This option bypasses the
      normal Apache ErrorDocument error content.  This is required to return
      the full debugging results from the ASP.NET environment in development
      environments.  Caution is urged before using this option in production
      environments, where path-revealing flaws should be avoided.</dd>

    </dl>

    <p>Normally, if multiple <directive>AspNet</directive> directives could
    apply to a directory, then the most specific one is used and others are
    ignored; the AspNet directives are never merged.  See <a
    href="../sections.html#mergin">how sections are merged</a> for a better
    understanding of which Files, Directory, or Location section will take
    precedence.</p>
 
</usage>
</directivesynopsis>

<directivesynopsis>
<name>AspNetMount</name>

<description>Mounts a URI to a physical ASP.NET directory</description>
<syntax>AspNetMount <var>URL-path</var> <var>directory-path</var></syntax>
<contextlist><context>server config</context>
</contextlist>

<usage>

    <p>The <directive>AspNetMount</directive> directive determines which
    physical directory is mounted by the ASP.NET host.  This directive
    does -not- actually expose the content, you must use the 
    <directive module="mod_alias">Alias</directive>
    directive to expose the content to the remote user.</p>

</usage>
</directivesynopsis>

<directivesynopsis>
<name>AspNetVersion</name>

<description>Force a specific .NET Framework version to be loaded</description>
<syntax>AspNetVersion <var>versionstring</var></syntax>
<contextlist><context>server config</context>
</contextlist>
<compatibility>Build 2004 and later</compatibility>

<usage>

    <p>The <directive>AspNetVersion</directive> directive will override the
    default (most current) .NET Framework environment, and elect a different
    installed version of the .NET Framework.  The chosen version must be
    installed on the machine.</p>

    <p>If this directive is not present, the most current .NET Framework version
    is used.  This directive should be specified only once, only the last occurance
    in the httpd.conf file is used to elect the .NET Framework version.</p>

    <p>See the c:\Windows\Microsoft.NET\Framework\ directory for all installed
    versions and their version tags (the actual directory names).</p>

    <example><title>Example:</title>
# Load mod_aspdotnet using the 1.0 release version of the .NET Framework
AspNetVersion v1.0.3705<br />
    </example>

    <example><title>Example:</title>
# Load mod_aspdotnet using the 1.1 release version of the .NET Framework
AspNetVersion v1.1.4322<br />
    </example>

</usage>
</directivesynopsis>
</modulesynopsis>
