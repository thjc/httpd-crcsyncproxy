<html><head><META http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><!--
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
              This file is generated from xml source: DO NOT EDIT
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      --><title>worker - Apache HTTP Server</title><link href="../style/manual.css" type="text/css" rel="stylesheet"></head><body><blockquote><div align="center"><img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]"><h3>Apache HTTP Server Version 2.0</h3></div><h1 align="center">Apache Module worker</h1><table cellspacing="1" cellpadding="0" bgcolor="#cccccc"><tr><td><table bgcolor="#ffffff"><tr><td nowrap="nowrap" valign="top"><span class="help">Description:
                      </span></td><td>Multi-Processing Module implementing a hybrid
    multi-threaded multi-process web server</td></tr><tr><td nowrap="nowrap"><a href="module-dict.html#Status" class="help">Status:
                      </a></td><td>MPM</td></tr><tr><td nowrap="nowrap"><a href="module-dict.html#ModuleIdentifier" class="help">Module&nbsp;Identifier:
                        </a></td><td>mpm_worker_module</td></tr></table></td></tr></table><h2>Summary</h2>
    <p>This Multi-Processing Module (MPM) implements a hybrid
    multi-process multi-threaded server.  By using threads to serve
    requests, it is able to serve a large number of requests with
    less system resources than a process-based server.  Yet it
    retains much of the stability of a process-based server by 
    keeping multiple processes available, each with many threads.</p>

    <p>The most important directives used to control this MPM are
    <a href="../mod/mpm_common.html#threadsperchild" class="directive"><code class="directive">ThreadsPerChild</code></a>, which
    controls the number of threads deployed by each child process and
    <a href="../mod/mpm_common.html#maxclients" class="directive"><code class="directive">MaxClients</code></a>, which
    controls the maximum total number of threads that may be
    launched.</p>

<h2>Directives</h2><ul><li><a href="mpm_common.html#coredumpdirectory">CoreDumpDirectory</a></li><li><a href="mpm_common.html#group">Group</a></li><li><a href="mpm_common.html#listen">Listen</a></li><li><a href="mpm_common.html#listenbacklog">ListenBacklog</a></li><li><a href="mpm_common.html#lockfile">LockFile</a></li><li><a href="mpm_common.html#maxclients">MaxClients</a></li><li><a href="mpm_common.html#maxrequestsperchild">MaxRequestsPerChild</a></li><li><a href="mpm_common.html#maxsparethreads">MaxSpareThreads</a></li><li><a href="mpm_common.html#minsparethreads">MinSpareThreads</a></li><li><a href="mpm_common.html#pidfile">PidFile</a></li><li><a href="mpm_common.html#scoreboardfile">ScoreBoardFile</a></li><li><a href="mpm_common.html#sendbuffersize">SendBufferSize</a></li><li><a href="mpm_common.html#serverlimit">ServerLimit</a></li><li><a href="mpm_common.html#startservers">StartServers</a></li><li><a href="mpm_common.html#threadlimit">ThreadLimit</a></li><li><a href="mpm_common.html#threadsperchild">ThreadsPerChild</a></li><li><a href="mpm_common.html#user">User</a></li></ul><p><strong>See also </strong></p><ul><li><a href="../bind.html">Setting which addresses and
    ports Apache uses</a></li></ul><h2>How it Works</h2>
    <p>Each process has a fixed
    number of threads. The server adjusts to handle load by
    increasing or decreasing the number of processes.</p>

    <p>A single control process is responsible for launching child
    processes. Each child process creates a fixed number of threads as
    specified in the <a href="../mod/mpm_common.html#threadsperchild" class="directive"><code class="directive">ThreadsPerChild</code></a> directive. The
    individual threads then listen for connections and serve them when
    they arrive.</p>

    <p>Apache always tries to maintain a pool of <em>spare</em> or
    idle server threads, which stand ready to serve incoming
    requests. In this way, clients do not need to wait for a new
    threads or processes to be created before their requests can be
    served. The number of processes that will initially launched is
    set by the <a href="../mod/mpm_common.html#startservers" class="directive"><code class="directive">StartServers</code></a>
    directive. Then during operation, Apache assesses the total number
    of idle threads in all processes, and forks or kills processes to
    keep this number within the boundaries specified by <a href="../mod/mpm_common.html#minsparethreads" class="directive"><code class="directive">MinSpareThreads</code></a> and <a href="../mod/mpm_common.html#maxsparethreads" class="directive"><code class="directive">MaxSpareThreads</code></a>. Since this
    process is very self-regulating, it is rarely necessary to modify
    these directives from their default values. The maximum number of
    clients that may be served simultaneously (i.e., the maximum total
    number of threads in all processes) is determined by the
    <a href="../mod/mpm_common.html#maxclients" class="directive"><code class="directive">MaxClients</code></a> directive,
    while the maximum number of processes that can be launched is set
    by the <a href="../mod/mpm_common.html#serverlimit" class="directive"><code class="directive">ServerLimit</code></a>
    directive.  <a href="../mod/mpm_common.html#serverlimit" class="directive"><code class="directive">ServerLimit</code></a>
    multiplied by <a href="../mod/mpm_common.html#threadsperchild" class="directive"><code class="directive">ThreadsPerChild</code></a> must be greater
    than or equal to <a href="../mod/mpm_common.html#maxclients" class="directive"><code class="directive">MaxClients</code></a></p>

    <p>A typical configuration of the process-thread controls in
    the <code><a href="../mod/worker.html">worker</a></code> MPM could look as follows:</p>

<blockquote><table cellpadding="10"><tr><td bgcolor="#eeeeee"><code><pre>StartServers         2
MaxClients         150
MinSpareThreads     25
MaxSpareThreads     75
ThreadsPerChild     25
ServerLimit         16</pre></code></td></tr></table></blockquote>

    <p>While the parent process is usually started as root under Unix
    in order to bind to port 80, the child processes and threads are
    launched by Apache as a less-privileged user. The <a href="../mod/mpm_common.html#user" class="directive"><code class="directive">User</code></a> and <a href="../mod/mpm_common.html#group" class="directive"><code class="directive">Group</code></a> directives are used to set
    the privileges of the Apache child processes. The child processes
    must be able to read all the content that will be served, but
    should have as few privileges beyond that as possible. In
    addition, unless <a href="../suexec.html">suexec</a> is used,
    these directives also set the privileges which will be inherited
    by CGI scripts.</p>

    <p><a href="../mod/mpm_common.html#maxrequestsperchild" class="directive"><code class="directive">MaxRequestsPerChild</code></a>
    controls how frequently the server recycles processes by killing
    old ones and launching new ones.</p>
<hr></blockquote><h3 align="center">Apache HTTP Server Version 2.0</h3><a href="./"><img src="../images/index.gif" alt="Index"></a><a href="../"><img src="../images/home.gif" alt="Home"></a></body></html>