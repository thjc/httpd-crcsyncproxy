<html xmlns="http://www.w3.org/TR/xhtml1/strict"><head><!--
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
              This file is generated from xml source: DO NOT EDIT
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      --><title>prefork - Apache HTTP Server</title><link href="../style/manual.css" type="text/css" rel="stylesheet"/></head><body><blockquote><div align="center"><img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]"/><h3>Apache HTTP Server Version 2.0</h3></div><h1 align="center">Apache モジュール prefork</h1><table cellspacing="1" cellpadding="0" bgcolor="#cccccc"><tr><td><table bgcolor="#ffffff"><tr><td nowrap="nowrap" valign="top"><span class="help">説明:
                      </span></td><td>スレッドを使わず、先行して fork を行なうウェブサーバを実装しています
</td></tr><tr><td nowrap="nowrap"><a href="module-dict.html#Status" class="help">ステータス:
                      </a></td><td>MPM</td></tr><tr><td nowrap="nowrap"><a href="module-dict.html#ModuleIdentifier" class="help">モジュール識別子:
                        </a></td><td>mpm_prefork_module</td></tr></table></td></tr></table><h2>概要</h2>
    <p>このマルチプロセッシングモジュール (MPM) は、
    Unix 上での Apache 1.3 のデフォルトの挙動と非常によく似た方法で
    リクエストを処理する、スレッドを使わず、先行して fork を行なう
    ウェブサーバを実装しています。
    スレッドセーフでないライブラリとの互換性をとるために、
    スレッドを避ける必要のあるサイトでは、このモジュールの使用が適切でしょう。
    あるリクエストで発生した問題が他のリクエストに影響しないように、
    個々のリクエストを単離するのにも、最適な MPM です。</p>

    <p>この MPM は非常に自律的なので、この MPM の設定ディレクティブを
    調整する必要はほとんどないでしょう。もっとも重要なことは、
    <a href="../mod/mpm_common.html#maxclients" class="directive"><code class="directive">MaxClients</code></a>
    が、予想される同時リクエスト数を十分扱えるぐらいは大きいけれども、
    全プロセスに十分な物理メモリが確実に行き渡る程度には小さい値にする、
    ということです。</p>

<h2>ディレクティブ</h2><ul><li><a href="#acceptmutex">AcceptMutex</a></li><li><a href="mpm_common.html#coredumpdirectory">CoreDumpDirectory</a></li><li><a href="mpm_common.html#group">Group</a></li><li><a href="mpm_common.html#listen">Listen</a></li><li><a href="mpm_common.html#listenbacklog">ListenBacklog</a></li><li><a href="mpm_common.html#lockfile">LockFile</a></li><li><a href="mpm_common.html#maxclients">MaxClients</a></li><li><a href="mpm_common.html#maxrequestsperchild">MaxRequestsPerChild</a></li><li><a href="mpm_common.html#maxspareservers">MaxSpareServers</a></li><li><a href="#maxspareservers">MaxSpareServers</a></li><li><a href="mpm_common.html#minspareservers">MinSpareServers</a></li><li><a href="#minspareservers">MinSpareServers</a></li><li><a href="mpm_common.html#pidfile">PidFile</a></li><li><a href="mpm_common.html#scoreboardfile">ScoreBoardFile</a></li><li><a href="mpm_common.html#sendbuffersize">SendBufferSize</a></li><li><a href="mpm_common.html#serverlimit">ServerLimit</a></li><li><a href="mpm_common.html#startservers">StartServers</a></li><li><a href="mpm_common.html#user">User</a></li></ul><p><strong>参照 </strong></p><ul><li><a href="../bind.html">Apache
が使用するアドレスとポートの設定</a></li></ul><h2>動作方法</h2>
    <p>一つのコントロールプロセスが、
    コネクションに対して listen して、しかるべき時に応答する
    子プロセスを起動します。Apache は常に幾つかの<em>スペア</em>
    かアイドルなサーバプロセスを維持していて、それらは入ってきた
    リクエストに応答できるように待機しています。
    このようにしてクライアントは、リクエストが応答される前に、
    新しい子プロセスが fork されるのを待たなくてもよいように
    なっています。</p>

    <p>親プロセスがリクエストに応答するの子プロセスを
    どのように生成するかは、
    <a href="../mod/mpm_common.html#startservers" class="directive"><code class="directive">StartServers</code></a>,
    <a href="#minspareservers" class="directive"><code class="directive">MinSpareServers</code></a>,
    <a href="#maxspareservers" class="directive"><code class="directive">MaxSpareServers</code></a>,
    <a href="../mod/mpm_common.html#maxclients" class="directive"><code class="directive">MaxClients</code></a>
    で調整します。一般的に、Apache は非常に自律的なので、
    大抵のサイトではこれらのディレクティブをデフォルト値から調整する
    必要はないでしょう。
    同時に 256 を超えるリクエストに応答しないといけないサイトでは、
    <a href="../mod/mpm_common.html#maxclients" class="directive"><code class="directive">MaxClients</code></a>
    を増やす必要があるでしょう。
    一方、メモリの限られているサイトでは、スラッシング
    (メモリとディスク間で何度もスワップ) が起こるのを防ぐために
    <a href="../mod/mpm_common.html#maxclients" class="directive"><code class="directive">MaxClients</code></a>
    を減らす必要があるでしょう。プロセス生成のチューニングに関する
    詳しい情報は、<a href="../misc/perf-tuning.html">性能に関するヒント</a>
    にあります。</p>

    <p>通常 Unix では親プロセスは 80 番ポートにバインドするために
    root で起動されますが、子プロセスやスレッドは
    もっと低い権限のユーザで Apache によって起動されます。
    <a href="../mod/mpm_common.html#user" class="directive"><code class="directive">User</code></a> と
    <a href="../mod/mpm_common.html#group" class="directive"><code class="directive">Group</code></a>
    ディレクティブは
    Apache の子プロセスの権限を設定するのに用いられます。
    子プロセスはクライアントに送るコンテンツ全てを読めないといけませんが、
    可能な限り必要最小限の権限のみを持っているようにするべきです。</p>

    <p><a href="../mod/mpm_common.html#maxrequestsperchild" class="directive"><code class="directive">MaxRequestsPerChild</code></a>
    は、古いプロセスを停止して新しいプロセスを起動することによって、
    どの程度の頻度でサーバがプロセスをリサイクルするかを制御します。</p>
<hr/><h2><a name="AcceptMutex">AcceptMutex</a> <a name="acceptmutex">ディレクティブ</a></h2><table cellpadding="1" cellspacing="0" border="0" bgcolor="#cccccc"><tr><td><table bgcolor="#ffffff"><tr><td nowrap="nowrap"><strong>説明: 
                  </strong></td><td>複数の子プロセスがネットワークソケットでリクエストを
accept しようとしているときに、Apache がそれらの子プロセスを直列化するために
使う方法</td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Syntax" class="help">構文:
                  </a></td><td>AcceptMutex default|<em>method</em></td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Default" class="help">デフォルト: 
                    </a></td><td><code>AcceptMutex default</code></td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Context" class="help">コンテキスト:
                  </a></td><td>サーバ設定ファイル</td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Status" class="help">ステータス:
                  </a></td><td>MPM</td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Module" class="help">モジュール:
                  </a></td><td>prefork</td></tr></table></td></tr></table>
    <p><code class="directive">AcceptMutex</code> ディレクティブは、
    ネットワークソケットのリクエストを accept しようとしている複数の子プロセスを
    Apache が直列化するために使う方法を設定します。
    Apache 2.0 より前では、このメソッドはコンパイル時にのみ選択できました。
    最適な方法は、アーキテクチャやプラットホームに大きく依存します。
    詳細に関しては、<a href="../misc/perf-tuning.html">性能のチューニング</a>
    ドキュメントをご覧下さい。</p>

    <p>このディレクティブが <code>default</code>
    に設定されていれば、コンパイル時に選択されたデフォルト値が使われます。
    他の使用可能なメソッドの一覧は下にあります。
    全てのメソッドが全てのプラットホームで使用可能であるわけではない、
    ということに注意してください。
    使用可能でないメソッドが指定された場合は、
    使用可能なメソッドの一覧を含んだメッセージが
    エラーログに出力されます。</p>

    <dl>
      <dt><code>flock</code></dt>

      <dd><a href="../mod/mpm_common.html#lockfile" class="directive"><code class="directive">LockFile</code></a>
      ディレクティブで定義したファイルのロックに、
      <code>flock(2)</code> システムコールを使います。</dd>

      <dt><code>fcntl</code></dt>

      <dd><a href="../mod/mpm_common.html#lockfile" class="directive"><code class="directive">LockFile</code></a>
      ディレクティブで定義したファイルのロックに、
      <code>fnctl(2)</code> システムコールを使います。</dd>

      <dt><code>sysvsem</code></dt>

      <dd>排他処理の実装に SysV 形式のセマフォを使います。</dd>

      <dt><code>pthread</code></dt>

      <dd>POSIX Threads (PThreads) 規格で実装されている
      POSIX 排他処理を使います。</dd>
    </dl>
<hr/><h2><a name="MaxSpareServers">MaxSpareServers</a> <a name="maxspareservers">ディレクティブ</a></h2><table cellpadding="1" cellspacing="0" border="0" bgcolor="#cccccc"><tr><td><table bgcolor="#ffffff"><tr><td nowrap="nowrap"><strong>説明: 
                  </strong></td><td>アイドルな子サーバプロセスの最大個数</td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Syntax" class="help">構文:
                  </a></td><td>MaxSpareServers <em>number</em><br></td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Default" class="help">デフォルト: 
                    </a></td><td><code>MaxSpareServers 10</code></td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Context" class="help">コンテキスト:
                  </a></td><td>サーバ設定ファイル</td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Status" class="help">ステータス:
                  </a></td><td>MPM</td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Module" class="help">モジュール:
                  </a></td><td>prefork</td></tr></table></td></tr></table>
    <p><code class="directive">MaxSpareServers</code> ディレクティブは、
    <em>アイドルな</em>子サーバプロセスの希望最大個数を設定します。
    アイドルプロセスとは、リクエストを扱っていないプロセスです。
    MaxSpareServers よりも多い数がアイドルであれば、
    親プロセスは超過プロセスを kill します。</p>

    <p>非常に混んでいるサイトでのみ、このパラメータをチューニングするべきです。
    このパラメータを大きくするということは、大抵の場合は悪い発想です。</p>
<p><strong>参照 </strong></p><ul><li><a href="#minspareservers" class="directive"><code class="directive">MinSpareServers</code></a></li><li><a href="../mod/mpm_common.html#startservers" class="directive"><code class="directive">StartServers</code></a></li></ul><hr/><h2><a name="MinSpareServers">MinSpareServers</a> <a name="minspareservers">ディレクティブ</a></h2><table cellpadding="1" cellspacing="0" border="0" bgcolor="#cccccc"><tr><td><table bgcolor="#ffffff"><tr><td nowrap="nowrap"><strong>説明: 
                  </strong></td><td>アイドルな子サーバプロセスの最小個数</td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Syntax" class="help">構文:
                  </a></td><td>MinSpareServers <em>number</em></td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Default" class="help">デフォルト: 
                    </a></td><td><code>MinSpareServers  5</code></td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Context" class="help">コンテキスト:
                  </a></td><td>サーバ設定ファイル</td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Status" class="help">ステータス:
                  </a></td><td>MPM</td></tr><tr><td nowrap="nowrap"><a href="directive-dict.html#Module" class="help">モジュール:
                  </a></td><td>prefork</td></tr></table></td></tr></table>
    <p><code class="directive">MaxSpareServers</code> ディレクティブは、
    <em>アイドルな</em>子サーバプロセスの希望最小個数を設定します。
    アイドルプロセスとは、リクエストを扱っていないプロセスです。
    MinSpareServers よりも少ない数がアイドルであれば、
    親プロセスは最高で 1 秒につき 1 個の割合で新しい子プロセスを生成します。</p>

    <p>非常に混んでいるサイトでのみ、このパラメータをチューニングするべきです。
    このパラメータを大きくするということは、大抵の場合は悪い発想です。</p>
<p><strong>参照 </strong></p><ul><li><a href="#maxspareservers" class="directive"><code class="directive">MaxSpareServers</code></a></li><li><a href="../mod/mpm_common.html#startservers" class="directive"><code class="directive">StartServers</code></a></li></ul><hr/></blockquote><h3 align="center">Apache HTTP Server Version 2.0</h3><a href="./"><img src="../images/index.gif" alt="索引"/></a><a href="../"><img src="../images/home.gif" alt="ホーム"/></a></body></html>